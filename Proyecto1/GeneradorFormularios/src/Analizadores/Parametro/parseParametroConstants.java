/* Generated By:JavaCC: Do not edit this line. parseParametroConstants.java */
package Analizadores.Parametro;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface parseParametroConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ESPACIO = 1;
  /** RegularExpression Id. */
  int fechahora = 2;
  /** RegularExpression Id. */
  int fecha = 3;
  /** RegularExpression Id. */
  int hora = 4;
  /** RegularExpression Id. */
  int fechaA = 5;
  /** RegularExpression Id. */
  int horaA = 6;
  /** RegularExpression Id. */
  int punto = 7;
  /** RegularExpression Id. */
  int dospuntos = 8;
  /** RegularExpression Id. */
  int numeral = 9;
  /** RegularExpression Id. */
  int llaveA = 10;
  /** RegularExpression Id. */
  int llaveC = 11;
  /** RegularExpression Id. */
  int varP = 12;
  /** RegularExpression Id. */
  int cad_max = 13;
  /** RegularExpression Id. */
  int cad_fila = 14;
  /** RegularExpression Id. */
  int cad_min = 15;
  /** RegularExpression Id. */
  int iniciar = 16;
  /** RegularExpression Id. */
  int finalizar = 17;
  /** RegularExpression Id. */
  int verdaderoFalso = 18;
  /** RegularExpression Id. */
  int siNo = 19;
  /** RegularExpression Id. */
  int entero = 20;
  /** RegularExpression Id. */
  int doble = 21;
  /** RegularExpression Id. */
  int caracter = 22;
  /** RegularExpression Id. */
  int cadena = 23;
  /** RegularExpression Id. */
  int numero = 24;
  /** RegularExpression Id. */
  int verdadero = 25;
  /** RegularExpression Id. */
  int falso = 26;
  /** RegularExpression Id. */
  int desigual = 27;
  /** RegularExpression Id. */
  int mayorigualque = 28;
  /** RegularExpression Id. */
  int menorigualque = 29;
  /** RegularExpression Id. */
  int si = 30;
  /** RegularExpression Id. */
  int no = 31;
  /** RegularExpression Id. */
  int suma = 32;
  /** RegularExpression Id. */
  int potencia = 33;
  /** RegularExpression Id. */
  int menos = 34;
  /** RegularExpression Id. */
  int multi = 35;
  /** RegularExpression Id. */
  int div = 36;
  /** RegularExpression Id. */
  int mod = 37;
  /** RegularExpression Id. */
  int igual = 38;
  /** RegularExpression Id. */
  int mayorque = 39;
  /** RegularExpression Id. */
  int menorque = 40;
  /** RegularExpression Id. */
  int and = 41;
  /** RegularExpression Id. */
  int or = 42;
  /** RegularExpression Id. */
  int not = 43;
  /** RegularExpression Id. */
  int parA = 44;
  /** RegularExpression Id. */
  int parC = 45;
  /** RegularExpression Id. */
  int identificador = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ESPACIO>",
    "<fechahora>",
    "<fecha>",
    "<hora>",
    "<fechaA>",
    "<horaA>",
    "\".\"",
    "\"..\"",
    "\"#\"",
    "\"[\"",
    "\"]\"",
    "<varP>",
    "\"cad_max\"",
    "\"cad_fila\"",
    "\"cad_min\"",
    "\"iniciar\"",
    "\"finalizar\"",
    "\"v_f\"",
    "\"si_no\"",
    "<entero>",
    "<doble>",
    "<caracter>",
    "<cadena>",
    "<numero>",
    "\"verdadero\"",
    "\"falso\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\"si\"",
    "\"no\"",
    "\"+\"",
    "\"^\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"mod\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "<identificador>",
  };

}
