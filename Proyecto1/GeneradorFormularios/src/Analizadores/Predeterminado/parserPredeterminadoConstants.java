/* Generated By:JavaCC: Do not edit this line. parserPredeterminadoConstants.java */
package Analizadores.Predeterminado;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface parserPredeterminadoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ESPACIO = 1;
  /** RegularExpression Id. */
  int fechahora = 2;
  /** RegularExpression Id. */
  int fecha = 3;
  /** RegularExpression Id. */
  int hora = 4;
  /** RegularExpression Id. */
  int fechaA = 5;
  /** RegularExpression Id. */
  int horaA = 6;
  /** RegularExpression Id. */
  int dospuntos = 7;
  /** RegularExpression Id. */
  int numeral = 8;
  /** RegularExpression Id. */
  int llaveA = 9;
  /** RegularExpression Id. */
  int llaveC = 10;
  /** RegularExpression Id. */
  int varP = 11;
  /** RegularExpression Id. */
  int entero = 12;
  /** RegularExpression Id. */
  int doble = 13;
  /** RegularExpression Id. */
  int numero = 14;
  /** RegularExpression Id. */
  int verdadero = 15;
  /** RegularExpression Id. */
  int falso = 16;
  /** RegularExpression Id. */
  int desigual = 17;
  /** RegularExpression Id. */
  int mayorigualque = 18;
  /** RegularExpression Id. */
  int menorigualque = 19;
  /** RegularExpression Id. */
  int si = 20;
  /** RegularExpression Id. */
  int no = 21;
  /** RegularExpression Id. */
  int suma = 22;
  /** RegularExpression Id. */
  int potencia = 23;
  /** RegularExpression Id. */
  int menos = 24;
  /** RegularExpression Id. */
  int multi = 25;
  /** RegularExpression Id. */
  int div = 26;
  /** RegularExpression Id. */
  int mod = 27;
  /** RegularExpression Id. */
  int igual = 28;
  /** RegularExpression Id. */
  int mayorque = 29;
  /** RegularExpression Id. */
  int menorque = 30;
  /** RegularExpression Id. */
  int and = 31;
  /** RegularExpression Id. */
  int or = 32;
  /** RegularExpression Id. */
  int not = 33;
  /** RegularExpression Id. */
  int parA = 34;
  /** RegularExpression Id. */
  int parC = 35;
  /** RegularExpression Id. */
  int identificador = 36;
  /** RegularExpression Id. */
  int caracter = 37;
  /** RegularExpression Id. */
  int cadena = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ESPACIO>",
    "<fechahora>",
    "<fecha>",
    "<hora>",
    "<fechaA>",
    "<horaA>",
    "\"..\"",
    "\"#\"",
    "\"[\"",
    "\"]\"",
    "<varP>",
    "<entero>",
    "<doble>",
    "<numero>",
    "\"verdadero\"",
    "\"falso\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\"si\"",
    "\"no\"",
    "\"+\"",
    "\"^\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"mod\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "<identificador>",
    "<caracter>",
    "<cadena>",
  };

}
